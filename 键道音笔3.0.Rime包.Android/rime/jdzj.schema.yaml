# Rime schema settings
# encoding: utf-8
# 安装rime后该方案放入rime文件夹，输入法设置里启用方案即可
# a键为拼音反查
schema:
  schema_id: jdzj
  name: "键道整句"
  version: "1"
  author:
    - 发明人 大牛
  description: |

switches:
  - name: ascii_mode
    reset: 0
    states: [ 中文, 西文 ]
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: ascii_punct
    states: [ ，。, ，． ]
  - name: simplification
    states: [ 漢字, 汉字 ]
    reset: 1

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - reverse_lookup_translator
    - script_translator

speller:
  alphabet: "qwertasdfgzxcvbyuiophjklnm"
  initials: "qwertypsdfghjklzxcbnma'"
  auto_select: false
  #use_space: true
  algebra:
    - fuzz|^([a-z]{2}).+|$1
    - "fuzz/^(\\w)(\\w)(\\w)(\\w)(\\w).+$/$1$2$3$4$5/"  
    - "fuzz/^(\\w)(\\w)(\\w)(\\w).+$/$1$2$3$4/"
  delimiter: " '" 
  
translator:
  dictionary: jdzj
  enable_charset_filter: false
  enable_sentence: true
  enable_encoder: true
  encode_commit_history: true
  enable_user_dict: true
  enable_completion: true
  max_phrase_length: 5

punctuator:
  import_preset: default
  half_shape:
    ".": {commit: "。"}
    ",": {commit: "，"}
    "\\": ["、", "\\", "＼"]
    "!": {commit: "！"}
    "\"": {pair: ["“", "”"]}
    "$": {commit: "￥"}
    "(": "（"
    ")": "）"
    _: "——"
    ":": {commit: "："}
    "<": {commit: "《"}
    ">": {commit: "》"}
    "?": {commit: "？"}
    "^": {commit: "……"}
    "{": ["『", "〖", "｛"]
    "|": ["·", "｜", "§", "¦"]
    "}": ["』", "〗", "｝"]
    "~": "～"

reverse_lookup:
  dictionary: pinyin_simp
  prefix: "a"
  suffix: "'"
  tips: 〔拼音〕
  preedit_format:
    - xform/([nl])v/$1ü/
    - xform/([nl])ue/$1üe/
    - xform/([jqxy])v/$1u/

recognizer:
  import_preset: default
  patterns:
    reverse_lookup: "^a[a-z]*'?$"
    
key_binder:
  bindings:
    - {accept: minus, send: Page_Up, when: has_menu}
    - {accept: equal, send: Page_Down, when: has_menu}
    #- {when: has_menu, accept: apostrophe, send: 2}
    #- {when: has_menu, accept: space, send: underscore}